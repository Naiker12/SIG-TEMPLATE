// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-py"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  bio       String?
  roleId    String
  role      Role     @relation(fields: [roleId], references: [id])
  files     File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  FileMetadata FileMetadata[]
  Project      Project[]
}

model Role {
  id    String @id @default(uuid())
  name  String @unique
  users User[]
}

model File {
  id        String   @id @default(uuid())
  filename  String
  fileType  String
  size      Int
  status    String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ------------------------------------
// -- Nuevos modelos para el módulo de análisis
// ------------------------------------

model FileMetadata {
  id          String    @id @default(uuid())
  filename    String
  filetype    String
  filepath    String // URL pública de Supabase Storage
  columns     Json
  rows_count  Int
  size        Int
  uploadedAt  DateTime  @default(now())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  projects    Project[]
}

model Project {
  id          String   @id @default(uuid())
  name        String
  description String?
  config      Json // Configuración del dashboard (gráficos, filtros, etc.)
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  fileId      String
  file        FileMetadata @relation(fields: [fileId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
