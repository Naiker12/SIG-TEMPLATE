// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-py"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =================================================
// Modelo de Autenticación y Usuarios
// =================================================

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roleId    String
  role      Role     @relation(fields: [roleId], references: [id])
  files     File[] // Un usuario puede tener muchos archivos (metadata legada)
  projects  Project[] // Un usuario puede tener muchos proyectos de análisis
  fileMetadatas FileMetadata[] // Un usuario puede tener muchos archivos de análisis

  @@map("Usuario") // Mapea este modelo a la tabla "Usuario"
}

model Role {
  id    String @id @default(cuid())
  name  String @unique
  users User[]
}


// =================================================
// Modelo para la herramienta de compresión/división
// =================================================

model File {
  id        String   @id @default(cuid())
  filename  String
  fileType  String
  size      Int
  status    String
  createdAt DateTime @default(now())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
}

// =================================================
// Modelos para el nuevo flujo de Análisis de Datos
// =================================================

model FileMetadata {
  id         String   @id @default(cuid())
  filename   String
  filetype   String
  filepath   String   @unique
  columns    String[]
  rows_count Int
  size       Int
  uploadedAt DateTime @default(now())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  projects   Project[]
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  config      Json
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  fileId      String
  file        FileMetadata @relation(fields: [fileId], references: [id])
}
